name: Welcome_To_Shiny_Testing

on:
  pull_request:
    branches:
      - main
      - first_test
      - develop

jobs:
  run-tests:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: '4.2.0', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    
    steps:
    - name: Checkout respective branch
      uses: actions/checkout@v2
      
    - name: SetUp R
      uses: r-lib/actions/setup-r@v2
      id: install-r
      with:
        r-version: ${{ matrix.config.r }}
        http-user-agent: ${{ matrix.config.http-user-agent }}
        use-public-rspm: true
          
    - name: Set RENV_PATHS_ROOT
      shell: bash
      run: |
        echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
    # - name: SetUp R
    # - uses: r-lib/actions/setup-r-dependencies@v2
    #   with:
    #     packages: XML      
    
    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libglpk-dev
        
    - name: Cache packages
      uses: actions/cache@v2
      with:
        path: ${{ env.RENV_PATHS_ROOT }}
        key: ${{ runner.os }}-renv-${{ hashFiles('**/program/renv.lock') }}
        restore-keys: |
          ${{ runner.os }}-renv-
        
    - name: Install and activate renv
      shell: Rscript {0}
      run: |
        install.packages("renv")
        renv::restore(lockfile="program/renv.lock")
      

    - name: Test - Significance Panel
      shell: Rscript {0}
      run: |
        shiny::runTests("program/shinyApp", assert = TRUE, filter='testthat_sig')
          
    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ runner.os }}-r${{ matrix.config.r }}-tests
        path: tests
