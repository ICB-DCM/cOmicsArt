on:
  pull_request:
    branches:
      - main
      - first_test
      - develop

name: run-tests

jobs:
  run-tests:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: '4.2.0', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
    
    steps:
    - uses: actions/checkout@v2

    - uses: r-lib/actions/setup-r@v2
      id: install-r
      with:
        r-version: ${{ matrix.config.r }}
        http-user-agent: ${{ matrix.config.http-user-agent }}
        use-public-rspm: true
          
    - name: Set RENV_PATHS_ROOT
      shell: bash
      run: |
        echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
        
    - name: Install and activate renv
      run: |
        install.packages("renv")
        install.packages("qvalue")
        install.packages("shiny")
        renv::restore()
        renv::status()
      shell: Rscript {0}
      
    - name: Get R and OS version
      id: get-version
      run: |
        cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
        cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
      shell: Rscript {0}
      
    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}

    - name: Run tests
      shell: Rscript {0}
      run: |
        shiny::runTests("program/shinyApp", assert = TRUE)
          
    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ runner.os }}-r${{ matrix.config.r }}-tests
        path: tests
