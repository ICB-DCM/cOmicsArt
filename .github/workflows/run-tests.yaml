on:
  pull_request:
    branches:
      - main
      - first_test
      - develop

name: run-tests

jobs:
  run-tests:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-18.04, r: '4.2.0', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      
    steps:
      # do not convert line feeds in windows
      - name: Windows git setup
        if: runner.os == 'Windows'
        run:
          git config --global core.autocrlf false

      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: renv/library
          key: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('program/renv.lock') }}
          restore-keys: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Make sure renv exists
        shell: Rscript {0}
        run: |
          if (system.file(package = "renv") == "") install.packages("renv")
      
      - name: Install system dependencies
        if: runner.os == 'Linux'
        # do not record `pak` activity
        shell: Rscript {0}
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          install.packages("jsonlite")
          lapply(names(jsonlite::read_json("program/renv.lock")$Packages), function(pkg) {
            pak::pkg_system_requirements(pkg, execute = TRUE)
          })
          remove.packages("pak")
          
      - name: Restore renv packages
        shell: Rscript {0}
        run: |
          renv::restore()
          
      - name: Run tests
        shell: Rscript {0}
        run: |
          shiny::runTests("program/shinyApp", assert = TRUE)
          
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-tests
          path: tests
